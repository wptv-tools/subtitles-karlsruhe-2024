1
00:00:12,664 --> 00:00:16,760
Ja, willkommen zurück aus der Pause.

2
00:00:17,170 --> 00:00:20,326
Wie direkt weiter geht
es mit Learnings aus

3
00:00:20,327 --> 00:00:23,460
einer Million WordPress-Updates
von Mark Nilius.

4
00:00:23,600 --> 00:00:24,600
Viel Spaß.

5
00:00:26,360 --> 00:00:27,360
Dankeschön.

6
00:00:27,960 --> 00:00:28,960
Aus dem Bild raus.

7
00:00:30,050 --> 00:00:31,050
Da raus, da rein.

8
00:00:31,780 --> 00:00:32,780
Hallo zusammen.

9
00:00:34,040 --> 00:00:35,756
Ich hoffe, ihr seid noch halbwegs wach und
fit.

10
00:00:35,780 --> 00:00:39,460
So am Nachmittag lässt die Kondition
meistens langsam nach.

11
00:00:40,790 --> 00:00:45,872
Ich hoffe, ich erzähle euch
jetzt ein bisschen was nicht allzu

12
00:00:45,873 --> 00:00:48,116
kompliziertes, eher ein
bisschen was Lustiges vielleicht.

13
00:00:48,140 --> 00:00:53,000
Ein paar lustige Geschichten, die angenehm
anzuhören sind.

14
00:00:53,750 --> 00:00:57,080
Dann ist das mit dem Koma vielleicht nicht
ganz so wild.

15
00:00:57,455 --> 00:01:00,800
Ja, also ich erzähle was zu Learnings aus
einer Million WordPress-Updates.

16
00:01:02,910 --> 00:01:05,496
Wir machen erstmal eine schnelle Runde so
mit den üblichen Dingen.

17
00:01:05,520 --> 00:01:09,500
Also das, was man so als Vorinformation
irgendwie doch noch raushauen muss,

18
00:01:09,580 --> 00:01:12,540
standardmäßig, auch wenn ihr das
wahrscheinlich alle weitestgehend wisst.

19
00:01:14,590 --> 00:01:15,590
Was für Updates gibt's?

20
00:01:15,840 --> 00:01:19,620
Wir können Core updaten, wir können
Plugins updaten, wir können Themes updaten.

21
00:01:19,700 --> 00:01:22,600
Und ihr wisst vielleicht auch,
wir können Sprachdateien updaten.

22
00:01:22,685 --> 00:01:26,020
Das geht immer so gerne so ein bisschen
unter, aber die gibt's auch.

23
00:01:28,060 --> 00:01:31,300
Und wenn ihr euch eure Webseite anschaut,
kommt ein bisschen was zusammen.

24
00:01:31,700 --> 00:01:34,860
Also die übliche Webseite, 20 Plugins,
30 Plugins.

25
00:01:35,790 --> 00:01:36,620
Habt ihr 100 Plugins?

26
00:01:36,720 --> 00:01:37,140
Ich weiß nicht.

27
00:01:37,260 --> 00:01:38,260
Manche gibt's.

28
00:01:39,340 --> 00:01:40,840
Nö, da kommen Updates zusammen.

29
00:01:41,770 --> 00:01:43,629
Wenn wir uns angucken,
wie viele Plugins gibt's so,

30
00:01:43,630 --> 00:01:45,621
ne, WordPress-Repository,
da ist der Screenshot.

31
00:01:46,400 --> 00:01:50,000
59.000 kostenlose Plugins, da sind die
ganzen Kauf-Plugins alle noch nicht dabei.

32
00:01:51,990 --> 00:01:54,000
Gibt's Stoff, da kann man richtig viel
mitmachen.

33
00:01:57,510 --> 00:01:59,660
Und ihr wisst natürlich auch, warum ihr
Updates machen wollt, ne.

34
00:01:59,680 --> 00:02:01,160
Das ist jetzt auch keine Neuerung.

35
00:02:03,280 --> 00:02:05,960
Sicherheitsgründe, Sicherheitslücken
sollten geschlossen werden.

36
00:02:07,260 --> 00:02:09,860
Ihr habt irgendwelche Bugfixes,
irgendwas, was nicht funktioniert.

37
00:02:10,360 --> 00:02:12,520
Ihr habt neue Features, die ihr gerne
haben wollt.

38
00:02:13,000 --> 00:02:16,840
Ihr habt irgendwelche
Kompatibilitätsthemen, PHP-Versionen zum

39
00:02:16,841 --> 00:02:18,738
Core, zu anderen
Plugins, zu irgendwas, was

40
00:02:18,739 --> 00:02:21,841
da irgendwie wieder
nicht so richtig läuft.

41
00:02:21,895 --> 00:02:25,000
Und, naja, mein Lieblingsthema,
Anpassung an die Gesetzeslagen,

42
00:02:25,215 --> 00:02:29,260
da, so DSGVO, Barrierefreiheit,
all das, was da so rumwabert.

43
00:02:29,760 --> 00:02:31,880
Andauernd müsst ihr also irgendwelche
Updates machen.

44
00:02:33,510 --> 00:02:35,071
Und wie ist das so im WordPress-Umfeld?

45
00:02:36,860 --> 00:02:39,040
Ihr macht heute mal Updates auf eurer
Seite, klickt die alle durch.

46
00:02:39,041 --> 00:02:41,780
Und geht morgen auf eure Seite und guckt
die nochmal an.

47
00:02:41,860 --> 00:02:45,960
Und da ist wieder so ein roter Kreis an
irgendeiner Stelle definitiv.

48
00:02:45,961 --> 00:02:47,681
Und es ist schon wieder irgendein Update
da.

49
00:02:48,230 --> 00:02:49,230
Warum ist das so?

50
00:02:50,290 --> 00:02:51,971
Ja, die Leute sind halt nicht koordiniert.

51
00:02:52,840 --> 00:02:55,993
Das sind diverseste Anbieter,
das sind die Plugin-Autoren,

52
00:02:56,053 --> 00:02:58,080
die Teamhersteller, die
WordPress-Core-Leute.

53
00:02:58,760 --> 00:03:01,161
Die reden ja nicht miteinander,
also zumindest nicht darüber.

54
00:03:03,060 --> 00:03:05,780
Und es gibt ein schönes Beispiel,
ihr kennt den Microsoft-Patch-Day.

55
00:03:06,670 --> 00:03:08,940
Microsoft hat irgendwann mal so einen Tag
eingeführt.

56
00:03:09,540 --> 00:03:12,140
Das war jetzt der zweite Dienstag in einem
Monat.

57
00:03:12,325 --> 00:03:14,126
An dem kommen alle Patches von Microsoft
raus.

58
00:03:14,900 --> 00:03:17,996
Das heißt, die machen das nicht so hier
mal ein und da mal ein und da mal noch.

59
00:03:18,020 --> 00:03:21,040
Im Übrigen für die Suite da und für die
Software da.

60
00:03:21,140 --> 00:03:23,220
Nein, das kommt alles klatsch an einem Tag
aus.

61
00:03:23,260 --> 00:03:25,416
Das ist wirklich irgendwie so ein
maximales Security-Release.

62
00:03:25,440 --> 00:03:27,120
Der kommt auch schon mal zu anderen
Zeiten.

63
00:03:28,040 --> 00:03:29,040
Haben wir nicht.

64
00:03:29,750 --> 00:03:33,140
Weil wir viel zu viele verschiedene Player
haben, die nichts miteinander zu tun haben

65
00:03:33,141 --> 00:03:34,901
und die nicht miteinander koordiniert
werden.

66
00:03:35,950 --> 00:03:37,511
Aber selbst wenn sie sich koordinieren.

67
00:03:37,730 --> 00:03:38,730
Also das Core.

68
00:03:38,920 --> 00:03:39,440
WordPress.

69
00:03:39,840 --> 00:03:40,840
Hauptversion.

70
00:03:41,610 --> 00:03:43,065
Wenn ihr in den letzten
Jahren mal guckt, wann so

71
00:03:43,066 --> 00:03:44,980
eine WordPress-Version
veröffentlicht worden ist.

72
00:03:45,590 --> 00:03:47,260
Da gab es tolle Zeitpunkte.

73
00:03:48,260 --> 00:03:49,840
In Amerika sehr beliebt.

74
00:03:49,841 --> 00:03:50,841
Rund um Thanksgiving.

75
00:03:52,130 --> 00:03:55,082
Wenn also die Major-Version von
WordPress rund um Thanksgiving

76
00:03:55,142 --> 00:03:57,460
veröffentlicht wird, wo alle
irgendwie im Urlaub sind.

77
00:03:57,520 --> 00:03:58,400
Keiner zu Hause ist.

78
00:03:58,460 --> 00:03:59,620
Alle bei den Eltern sind.

79
00:04:00,180 --> 00:04:02,920
Und dann freuen die sich total, dass
dann alle irgendwie aufs Update klicken.

80
00:04:02,960 --> 00:04:04,520
Alles ist kaputt und Drama passiert.

81
00:04:05,780 --> 00:04:06,780
Ähm.

82
00:04:06,850 --> 00:04:09,580
Anderer Zeitpunkt war so Anfang Dezember.

83
00:04:09,680 --> 00:04:10,680
Zehnter Dezember rum.

84
00:04:10,990 --> 00:04:12,236
So kurz vor den Weihnachtsferien.

85
00:04:12,260 --> 00:04:14,820
Damit man dann noch richtig Arbeit mit den
WordPress-Updates hat.

86
00:04:15,060 --> 00:04:15,720
Das sind so...

87
00:04:15,970 --> 00:04:17,020
Auch selbst da, ne.

88
00:04:17,080 --> 00:04:19,860
Da, wo sie sich koordinieren könnten,
ist das nicht immer so der Fall.

89
00:04:20,880 --> 00:04:24,220
Das heißt, wir haben irgendwie über das
ganze Jahr zu jedem beliebigen Zeitpunkt

90
00:04:24,370 --> 00:04:26,940
immer irgendwann irgendwo irgendeinen
Update.

91
00:04:28,140 --> 00:04:29,261
Und das ist ganz schön viel.

92
00:04:30,140 --> 00:04:31,181
Und die schlaue Frage ist.

93
00:04:33,390 --> 00:04:34,260
Wie mache ich das am besten?

94
00:04:34,380 --> 00:04:35,380
Und.

95
00:04:36,330 --> 00:04:37,180
Was wird dabei alles schief?

96
00:04:37,300 --> 00:04:38,300
Das erzähl ich.

97
00:04:41,680 --> 00:04:45,170
Wir könnten jetzt ein bisschen Ordnung in
dieses Chaos bringen und da uns

98
00:04:45,171 --> 00:04:50,850
irgendwelche tollen Schritte überlegen,
damit das ab jetzt koordiniert läuft.

99
00:04:51,260 --> 00:04:56,610
Also wir könnten zum Beispiel einmal im
Monat Updates machen.

100
00:04:57,310 --> 00:04:57,830
Alle.

101
00:04:58,070 --> 00:04:59,070
Das ist gut.

102
00:05:00,075 --> 00:05:02,830
Ist ein bisschen blöd, weil ja jeden Tag
irgendwelche kommen.

103
00:05:03,490 --> 00:05:06,510
Und einmal im Monat ist definitiv ein
Zulauf.

104
00:05:06,511 --> 00:05:09,710
Ein langer Zeitraum, um aus
Sicherheitsgründen da das Richtige zu tun.

105
00:05:09,790 --> 00:05:11,670
Also ich sage immer mindestens einmal die
Woche.

106
00:05:12,350 --> 00:05:14,470
Das heißt, das können wir schon mal nicht
machen.

107
00:05:16,710 --> 00:05:17,791
Aber was können wir machen?

108
00:05:19,730 --> 00:05:20,730
Ihr könnt Backups machen.

109
00:05:20,830 --> 00:05:23,370
Also das ist auch noch mal so
reingeschoben.

110
00:05:23,430 --> 00:05:25,350
Wer kein Backup hat, hat kein Mitleid von
mir.

111
00:05:25,915 --> 00:05:27,130
Da habe ich kein Problem mit.

112
00:05:27,450 --> 00:05:28,450
Sollt ihr machen.

113
00:05:28,590 --> 00:05:31,750
Deswegen sollt ihr immer vor einem Update
ein Backup haben.

114
00:05:31,790 --> 00:05:32,790
Dann ist alles gut.

115
00:05:34,760 --> 00:05:36,490
Es gibt auch diverse Lösungen für
Rollback.

116
00:05:36,491 --> 00:05:38,586
Also ihr macht ein Update und es klappt
irgendwas nicht.

117
00:05:38,610 --> 00:05:40,930
Und ihr könnt es wieder zurückspulen auf
die Version davor.

118
00:05:41,280 --> 00:05:43,690
Das gibt es sowohl für die Plugins als
auch für Core.

119
00:05:45,110 --> 00:05:45,930
Die Plugin Namen stehen da.

120
00:05:45,950 --> 00:05:47,290
WP-Rollback ist so für Plugins.

121
00:05:47,410 --> 00:05:48,890
Und es gibt natürlich WP-Downgrade.

122
00:05:48,970 --> 00:05:50,510
Das ist für die Core-Version.

123
00:05:50,530 --> 00:05:54,110
Wenn ihr also auf die Core-Version davor
zurück wollt, könnt ihr das damit machen.

124
00:05:54,360 --> 00:05:55,440
Und mit Rollback-Core auch.

125
00:05:57,060 --> 00:05:58,390
Das heißt, wir haben ein Backup.

126
00:05:59,040 --> 00:06:00,681
Wir haben irgendwelche Schutzmechanismen.

127
00:06:00,990 --> 00:06:02,431
Damit können wir schon mal arbeiten.

128
00:06:02,730 --> 00:06:03,811
Und ihr habt ein Changelog.

129
00:06:04,530 --> 00:06:06,033
Ihr habt ein Changelog,
in dem drin steht, was

130
00:06:06,034 --> 00:06:08,911
sich seit der letzten
Version geändert hat.

131
00:06:09,930 --> 00:06:11,810
So, jetzt mal ehrliche Hände.

132
00:06:13,470 --> 00:06:14,610
Wer liest das Changelog?

133
00:06:16,950 --> 00:06:17,950
Ja, ihr zählt nicht.

134
00:06:19,950 --> 00:06:20,950
Sind zu wenige.

135
00:06:23,240 --> 00:06:24,628
Ich kann einfach nur sehr
empfehlen, das werdet ihr ja

136
00:06:24,652 --> 00:06:28,050
gleich feststellen, so ein
Changelog lesen hat echt Vorteile.

137
00:06:29,280 --> 00:06:31,601
Denn in so einem Changelog stehen echt
wichtige Dinge drin.

138
00:06:32,460 --> 00:06:35,870
Und ihr werdet gleich bei so ein paar
Parts sehen, was da so schief gegangen ist.

139
00:06:36,530 --> 00:06:39,326
Dass es nicht schief gegangen wäre,
wenn man das Changelog gelesen hätte.

140
00:06:39,350 --> 00:06:40,650
Oder richtig gelesen hätte.

141
00:06:41,180 --> 00:06:43,310
Deswegen, Changelog lesen ist immer eine
gute Idee.

142
00:06:46,120 --> 00:06:48,319
Manchmal ist es so,
dass das Changelog sehr

143
00:06:48,320 --> 00:06:51,571
uneindeutig darüber
ist, was wirklich passiert.

144
00:06:51,990 --> 00:06:57,990
Da steht dann so nahe, der Versionssprung
von 4.2.3 auf 4.2.4, some fixes.

145
00:07:00,130 --> 00:07:02,091
Und some fixes machen aber irgendwie alles
kaputt.

146
00:07:02,310 --> 00:07:04,010
Das ist ein bisschen blöd.

147
00:07:04,085 --> 00:07:06,750
Da kann man da den Plugin-Autor ein
bisschen auf die Finger hauen,

148
00:07:07,310 --> 00:07:09,551
dass das ein Headed ein bisschen besser
beschreiben soll.

149
00:07:09,945 --> 00:07:11,466
Und ihr habt natürlich ein Testsystem.

150
00:07:12,400 --> 00:07:16,550
Finger hoch, wer hat ein Testsystem und
testet alle seine Updates erst in einem

151
00:07:16,551 --> 00:07:18,430
Testsystem, bevor er es im Live-System
testet.

152
00:07:20,530 --> 00:07:21,830
Es werden noch ein paar weniger.

153
00:07:22,150 --> 00:07:24,010
So ein Changelog lesen waren schon wenige.

154
00:07:24,110 --> 00:07:25,710
Testsystem werden noch ein paar weniger.

155
00:07:25,740 --> 00:07:28,990
Ich gebe zu, es gibt so ganz unbedeutende
Seiten.

156
00:07:30,950 --> 00:07:33,471
Da kann man einfach das Risiko eingehen
und einfach mal klicken.

157
00:07:34,010 --> 00:07:37,290
Wenn ihr den Online-Shop habt,
der euch einen vierstelligen oder

158
00:07:37,291 --> 00:07:42,910
fünfstelligen Betrag pro Tag produziert,
wollt ihr das vielleicht nicht werden.

159
00:07:43,840 --> 00:07:46,186
Aber jetzt haben wir das irgendwie so
geklärt, dass wenn also die Sachen,

160
00:07:46,210 --> 00:07:51,490
die wir haben könnten und mit denen wir
vorbereitet sein können und dann,

161
00:07:52,500 --> 00:07:58,770
ja dann, muss irgendwann irgendwer mal auf
dieses Knöpfchen drücken mit dem Update.

162
00:08:00,240 --> 00:08:04,410
Und ihr könnt die Augen zumachen oder ihr
könnt euch ungefähr so fühlen.

163
00:08:05,810 --> 00:08:08,990
Das ist so ein bisschen die Achterbahn des
Updates machen.

164
00:08:09,425 --> 00:08:11,190
Das ist übrigens ein wunderschönes KI
-Bild.

165
00:08:13,030 --> 00:08:14,650
Die Achterbahn des Updates machen.

166
00:08:15,440 --> 00:08:16,440
Klappt das denn alles?

167
00:08:16,470 --> 00:08:17,910
Was passiert denn da jetzt alles?

168
00:08:18,240 --> 00:08:20,710
Und die erste spannende Frage,
die allererste spannende Frage,

169
00:08:20,750 --> 00:08:24,430
die ich habe ist, was ist denn die
richtige Update-Reihe?

170
00:08:25,420 --> 00:08:27,980
Also ihr habt Updates von
Themes, von Plugins, von

171
00:08:27,981 --> 00:08:30,870
Sprachdateien und vom Core
da rumliegen in eurem System.

172
00:08:32,110 --> 00:08:34,030
Welches Update macht ihr denn als erstes?

173
00:08:35,150 --> 00:08:36,150
Vorschläge.

174
00:08:38,960 --> 00:08:39,960
Traut euch.

175
00:08:40,380 --> 00:08:40,780
Core.

176
00:08:41,240 --> 00:08:42,240
Okay.

177
00:08:43,450 --> 00:08:44,480
Ja, kann man tun.

178
00:08:45,750 --> 00:08:49,060
Blöd nur, wenn es Plugins gibt,
die in der Version, in der sie installiert

179
00:08:49,061 --> 00:08:53,260
sind auf dem System, mit der neuen Core
-Version nicht mehr kompatibel sind.

180
00:08:53,450 --> 00:08:56,223
Das heißt, man hätte das
Plugin erst updaten müssen,

181
00:08:56,224 --> 00:08:58,541
damit es dann mit der neuen
Core-Version funktioniert.

182
00:09:00,300 --> 00:09:02,340
Jetzt sagst du natürlich, okay,
dann mach ich die Plugins als erstes.

183
00:09:02,360 --> 00:09:03,360
Das ist in Ordnung.

184
00:09:03,460 --> 00:09:10,480
Problem ist, dumm nur, wenn die Plugins,
die du dann als erstes aktualisierst,

185
00:09:10,930 --> 00:09:13,170
nicht mehr mit deiner alten Core-Version
kompatibel sind.

186
00:09:13,250 --> 00:09:15,799
Und deswegen hättest du
erst den Core aktualisieren

187
00:09:15,800 --> 00:09:18,081
müssen, damit die
Plugins noch funktionieren.

188
00:09:18,485 --> 00:09:21,005
Und jetzt stehst du da und fragst dich,
was mach ich denn jetzt?

189
00:09:21,450 --> 00:09:22,930
Das sieht dann immer ungefähr so aus.

190
00:09:23,680 --> 00:09:25,020
Mach ich denn jetzt erst Core?

191
00:09:25,220 --> 00:09:27,260
Mach ich denn jetzt erst, also was denn
jetzt?

192
00:09:27,760 --> 00:09:29,420
Und das fiese ist, ich hab keine Ahnung.

193
00:09:31,170 --> 00:09:33,480
Ja genau, das fiese ist, ich hab keine
Ahnung.

194
00:09:34,000 --> 00:09:36,856
Also natürlich gibt's eine
Standard -Empfehlung,

195
00:09:36,857 --> 00:09:39,700
die höchstwahrscheinlich
in irgendeiner Form greift.

196
00:09:39,890 --> 00:09:42,920
Nämlich erst die Plugins und Themes und
dann den Core.

197
00:09:43,720 --> 00:09:49,220
Weil wenn der Plugin Auto auch nur einen
Punkten von Anstand hat, dann hat er sein

198
00:09:49,221 --> 00:09:50,736
Plugin so gebaut, dass
es sowohl mit der alten

199
00:09:50,737 --> 00:09:53,221
als auch mit der neuen
Core-Version funktioniert.

200
00:09:53,490 --> 00:09:55,900
Dann kannst du das Update machen,
dann ist das schon mal sauber und wenn du

201
00:09:55,901 --> 00:09:58,940
dann den Core hinten dran schiebst,
dann wird's wohl irgendwie klappen.

202
00:10:01,450 --> 00:10:03,590
Wir wissen, wir haben
eben 59.000 Plugins

203
00:10:03,591 --> 00:10:06,961
gesehen, die da im
Repository kostenlos drin sind.

204
00:10:08,230 --> 00:10:10,040
Da ist nicht jeder Autor mit Anstand
dabei.

205
00:10:10,280 --> 00:10:12,400
Das geht schief an einigen Stellen.

206
00:10:12,640 --> 00:10:13,640
Kommen wir gleich zu.

207
00:10:15,260 --> 00:10:18,040
Aber wenn ihr das gemacht habt,
ist alles gut, dann kann man die PHP

208
00:10:18,041 --> 00:10:19,730
-Version hinten dran
schieben, unter Umständen,

209
00:10:19,731 --> 00:10:21,641
wenn die auch mal
noch ein Update braucht.

210
00:10:21,980 --> 00:10:23,180
Meistens ja so einmal im Jahr.

211
00:10:24,080 --> 00:10:27,380
Ende November, Anfang Dezember ist schon
wieder so ein Zeitpunkt, da geht schon

212
00:10:27,381 --> 00:10:32,340
wieder die nächste PHP-Version den Bach
runter und aus der Maintenance raus.

213
00:10:32,700 --> 00:10:34,900
Spätestens dann muss man wieder eine
Version hochdrehen.

214
00:10:35,740 --> 00:10:36,740
Das Ding ist,

215
00:10:40,060 --> 00:10:44,600
Plugins haben ja schon mal verschiedene
Kompatibilitätseinstellungen.

216
00:10:45,930 --> 00:10:48,557
Und da steht dann drin, sie
laufen nur mit PHP-Version so und

217
00:10:48,558 --> 00:10:51,880
so oder nur ab Version so und
so oder nur mit Core so und so.

218
00:10:52,910 --> 00:10:55,950
Das heißt, wenn ihr gerade alle Updates
gemacht habt und ganz glücklich seid,

219
00:10:57,210 --> 00:11:00,170
jetzt guckt ihr die Liste nochmal neu an,
plötzlich stehen da neue Updates.

220
00:11:00,520 --> 00:11:02,740
Weil das sind die, die vorher nicht
angezeigt wurden, weil sie mit der alten

221
00:11:02,741 --> 00:11:06,640
Version von Core oder PHP oder irgendwas
anderem sowieso nicht kompatibel gewesen

222
00:11:06,641 --> 00:11:08,641
wären und deswegen erst gar nicht
angezeigt wurden.

223
00:11:09,440 --> 00:11:13,020
Das heißt, wenn ihr das macht,
müsst ihr sowieso schon mal mehrere

224
00:11:13,021 --> 00:11:16,301
Iterationen machen, bis ihr wirklich alles
erwischt habt, weil zwischendrin tauchen

225
00:11:16,820 --> 00:11:17,940
plötzlich noch mal neue auf.

226
00:11:19,570 --> 00:11:21,300
Aber deswegen, das ist der Ablauf.

227
00:11:21,560 --> 00:11:24,148
Wenn ihr das in der
Reihenfolge macht, behaupte

228
00:11:24,149 --> 00:11:27,001
ich, in den allermeisten
Fällen geht das gut.

229
00:11:28,780 --> 00:11:29,780
In den allermeisten.

230
00:11:33,170 --> 00:11:35,640
Wenn wir dabei sind, was in den
allermeisten Fällen gut läuft,

231
00:11:35,720 --> 00:11:37,600
können wir auch darüber reden,
was läuft schief.

232
00:11:38,280 --> 00:11:42,440
Und jetzt kommt eine wunderschöne Sammlung
von diversen Einzelbeispielen,

233
00:11:42,441 --> 00:11:45,819
die man aber so gerne
übertragen kann auf diverse andere

234
00:11:45,820 --> 00:11:49,020
Themen, weil sowas oder
sowas ähnliches passiert andauert.

235
00:11:53,410 --> 00:11:54,610
Keine Rückwärtskompatibilität.

236
00:11:56,790 --> 00:12:01,339
Ihr habt ein Plugin,
irgendein fettes Major-Update,

237
00:12:01,340 --> 00:12:04,411
ihr macht das und plötzlich
ist eure Seite kaputt.

238
00:12:06,700 --> 00:12:08,420
Ihr wisst, was Major in meiner Version
sind.

239
00:12:08,470 --> 00:12:13,010
Die Versionssprünge habe ich zur
Sicherheit noch mal aufgeschrieben.

240
00:12:13,110 --> 00:12:15,710
Aber die Events Calendar ist ein Plugin,
was ihr vielleicht kennt.

241
00:12:16,640 --> 00:12:20,930
Im Jahr 2022 gab es ein Update auf die
Version 6.0.0.

242
00:12:20,990 --> 00:12:23,501
Also das ist ein Update, das man sowieso
schon mal niemals macht.

243
00:12:23,525 --> 00:12:25,890
Man wartet bis 6.0.1, 6.0.2 oder
irgendwas.

244
00:12:26,410 --> 00:12:27,410
Aber es gab dieses Update.

245
00:12:27,411 --> 00:12:32,950
Und da steht da unten so unter Tweak,
also unter der Bezeichnung, naja,

246
00:12:32,970 --> 00:12:37,990
wir haben eine kleine Verbesserung,
steht da, dass alle Legacy-Templates für

247
00:12:37,991 --> 00:12:42,365
Events Calendar Anzeigen
von Terminen deprecated sind,

248
00:12:42,366 --> 00:12:45,230
rausgeworfen werden und
ab jetzt nicht mehr existieren.

249
00:12:46,160 --> 00:12:49,610
Das heißt, wenn ihr bis dahin diese
Templates genutzt habt in eurem System,

250
00:12:50,260 --> 00:12:52,104
war eure Seite
schlagartig kaputt, weil das

251
00:12:52,105 --> 00:12:53,850
wurde einfach nicht
mehr richtig angezeigt.

252
00:12:53,930 --> 00:12:56,990
Es war einfach nur Schmodder, HTML,
Chaos, pur.

253
00:12:57,660 --> 00:13:02,330
Das Ding ist, die haben schon monatelang
vorher in ihren Changelogs geschrieben,

254
00:13:03,090 --> 00:13:05,525
dass das neue Template-System
zur Verfügung steht

255
00:13:05,526 --> 00:13:07,591
und man ja die neuen
Templates schon nutzen kann.

256
00:13:08,510 --> 00:13:09,510
Hat nur keiner.

257
00:13:10,090 --> 00:13:11,190
Oder die wenigsten.

258
00:13:12,030 --> 00:13:16,930
Aber mit dem Update kamen quasi täglich
Menschen, die bei uns anrufen und sagten,

259
00:13:16,990 --> 00:13:19,510
ich glaube, ich habe da was kaputt
gemacht.

260
00:13:19,960 --> 00:13:23,930
Und dann ist es natürlich so, dass
wirklich, also das sind Templates und wenn

261
00:13:23,931 --> 00:13:26,750
das komplexe Templates waren, vielleicht
sogar individuelle Templates, die da

262
00:13:26,751 --> 00:13:29,871
gebaut worden sind, die man dann in der
neuen Template-Engine nachbauen musste,

263
00:13:31,240 --> 00:13:33,416
ist das etwas, was vielleicht nicht in
fünf Minuten geht.

264
00:13:33,440 --> 00:13:36,570
Das heißt, es wäre schlau gewesen,
an dieser Stelle das irgendwie zu planen.

265
00:13:36,840 --> 00:13:38,120
Wie hätte man das planen können?

266
00:13:38,970 --> 00:13:39,650
Changelog lesen.

267
00:13:39,820 --> 00:13:43,020
Also hätte irgendeiner vorher mal in den
letzten Monaten dieses Changelog gelesen

268
00:13:43,400 --> 00:13:45,346
und sich gedacht, wie die machen ein neues
Template-System.

269
00:13:45,370 --> 00:13:47,050
Wann schalten denn ihre alten Templates
ab?

270
00:13:47,320 --> 00:13:48,846
Könnten wir da vielleicht mal drüber
nachdenken?

271
00:13:48,870 --> 00:13:52,710
Oder spätestens bei dem Changelog sagen,
okay, den Klick machen wir jetzt noch nicht.

272
00:13:53,360 --> 00:13:57,631
Da warten wir vielleicht noch, bis wir
das mit den Templates organisiert haben.

273
00:13:58,980 --> 00:14:00,180
Hätte es besser laufen können.

274
00:14:00,400 --> 00:14:01,720
So waren einige Webseiten kaputt.

275
00:14:03,515 --> 00:14:05,655
Unabhängig davon, dass
dieses Update eigentlich raus

276
00:14:05,656 --> 00:14:07,811
war und die Migration
sowieso nicht gut funktionierte.

277
00:14:07,850 --> 00:14:08,970
Aber das sind andere Themen.

278
00:14:11,560 --> 00:14:13,680
Aber wenn wir schon bei Sachen sind,
die kaputt gehen.

279
00:14:14,500 --> 00:14:17,670
Hin und wieder gibt es Updates,
die ganz bewusst Breaking Changes,

280
00:14:17,710 --> 00:14:21,750
also wirklich Defekte haben, die quasi
eingeplant sind, zwangsmäßig.

281
00:14:22,930 --> 00:14:27,190
Letztes Beispiel, Februar 24, ACF,
Advanced Custom Fields, ein Plugin,

282
00:14:28,270 --> 00:14:30,150
millionenfach installiert, kennt ihr
vielleicht.

283
00:14:31,940 --> 00:14:34,790
Hier war es tatsächlich etwas,
in Anführungszeichen, sinnvolles.

284
00:14:35,360 --> 00:14:36,486
Weil es war eine Sicherheitslücke.

285
00:14:36,510 --> 00:14:38,150
Sie haben eine Sicherheitslücke entdeckt.

286
00:14:38,910 --> 00:14:41,250
Das wird man wahrscheinlich sehr schlecht
lesen können.

287
00:14:41,490 --> 00:14:43,050
Hier unten steht ganz klein The Field.

288
00:14:43,690 --> 00:14:48,130
Das ist eine Funktion, um das im Template
den Feldwert auszugeben.

289
00:14:48,750 --> 00:14:50,950
Und das ist nicht richtig Escape worden.

290
00:14:51,160 --> 00:14:52,490
Und da haben sie was angepasst.

291
00:14:53,250 --> 00:14:56,390
Was aber dazu geführt hat, dass sie davon
ausging, dass, wenn man das in seinen

292
00:14:56,391 --> 00:14:59,370
eigenen Templates eingebunden hat,
und da geht es ja immer um

293
00:14:59,371 --> 00:15:03,090
Individualentwicklung, um eigene
Templates, um eigene Erweiterungen,

294
00:15:03,091 --> 00:15:06,690
die man da programmiert, dass dann unter
Umständen das nicht mehr funktioniert,

295
00:15:06,830 --> 00:15:10,890
weil plötzlich irgendwelches HTML nicht
mehr interpretiert wird und deswegen nicht

296
00:15:11,065 --> 00:15:15,290
korrekt ausgegeben wird, sondern plötzlich
irgendwelche HTML-Zeichen da auftauchen.

297
00:15:17,750 --> 00:15:19,210
Das haben sie kommuniziert.

298
00:15:19,330 --> 00:15:24,010
Also das gab so ein paar Wochen zwischen
einem Update, wo diese Meldung aufgetaucht

299
00:15:24,011 --> 00:15:26,572
ist mit dem Hinweis,
Achtung, da kommt was, bis zu

300
00:15:26,573 --> 00:15:29,390
dem Update, in dem das
tatsächlich dann passiert ist.

301
00:15:30,290 --> 00:15:33,350
In den Wochen mussten die Seiten dann aber
idealerweise angepasst werden.

302
00:15:33,840 --> 00:15:36,410
Und aus meiner Erfahrung, die
allerwenigsten Seiten von uns waren

303
00:15:36,411 --> 00:15:38,331
betroffen, die wir da irgendwie betrachtet
haben.

304
00:15:38,550 --> 00:15:39,857
Bei den allermeisten
haben wir nur festgestellt,

305
00:15:39,877 --> 00:15:41,830
nee, ist alles gut, kann
genauso bleiben, wie es war.

306
00:15:42,880 --> 00:15:43,880
Aber man musste das tun.

307
00:15:44,500 --> 00:15:47,430
Und wenn man jetzt diese Notification,
die da im Dashboard die ganze Zeit

308
00:15:49,510 --> 00:15:53,370
auftauchte, geflissentlich ignoriert hat,
naja, dann bestand halt die Gefahr im

309
00:15:53,371 --> 00:15:56,410
Februar, wenn das Update wirklich kam,
dass es wirklich die Seite auch kaputt

310
00:15:56,411 --> 00:15:58,250
gegangen ist und da irgendwas aufgetaucht
ist.

311
00:15:58,310 --> 00:16:00,710
Also auch da, man muss nicht nur einen
Changelog lesen, sondern hin und wieder

312
00:16:00,711 --> 00:16:03,991
diese Notifications, wenn sie denn keine
Werbung sind, tatsächlich auch mal ernten.

313
00:16:07,270 --> 00:16:13,440
Was aber auch geht, sind mehrere Plugins,
die einfach zueinander nicht so wollen,

314
00:16:13,620 --> 00:16:14,620
wie sie sollen.

315
00:16:14,880 --> 00:16:18,460
Und am allerfiesesten ist das,
wenn die zwei Plugins, die nicht so

316
00:16:18,461 --> 00:16:22,760
sollen, nicht so wollen, wie sie sollen,
vom selben Autor sind.

317
00:16:23,740 --> 00:16:25,800
Das ist irgendwie unglücklich.

318
00:16:26,430 --> 00:16:30,860
In diesem Fall ist das zum Beispiel das
WooCommerce Variation Swatches Plugin,

319
00:16:30,900 --> 00:16:34,100
das gibt es in der kostenlosen Version, das
gibt es zusätzlich in einer Pro -Version.

320
00:16:34,485 --> 00:16:37,580
Und diese Pro-Version ist quasi ein Add
-on, das muss installiert, also die

321
00:16:37,830 --> 00:16:41,020
kostenlose Version muss mit installiert
sein zu der Pro-Version, müssen beide da

322
00:16:41,021 --> 00:16:42,960
sein, damit die Pro-Funktionalitäten da
sind.

323
00:16:44,040 --> 00:16:46,680
Kostenlose Version ist ein Repository,
kann man logischerweise ganz normal

324
00:16:46,681 --> 00:16:48,900
updaten, indem man draufklickt,
Autor update, alles gut.

325
00:16:50,460 --> 00:16:52,360
Die Pro-Version hat keinen Update
-Mechanismus.

326
00:16:53,420 --> 00:16:55,520
Da muss man also per FTP lernen.

327
00:16:57,360 --> 00:17:02,500
Das Lustige ist, eigentlich immer in den
letzten Jahren, wenn wir irgendwelche

328
00:17:02,700 --> 00:17:07,900
Updates gemacht haben und kostenlose
Version aktualisiert worden ist,

329
00:17:08,530 --> 00:17:10,640
die Seite mit einem 500er Fehler kaputt
gegangen ist.

330
00:17:11,240 --> 00:17:15,814
Weil die kostenlose Version
immer nur mit der genau

331
00:17:15,815 --> 00:17:21,420
entsprechenden kostenpflichtigen
Version funktioniert hat.

332
00:17:21,885 --> 00:17:25,080
Und es gab keine Rückwärtskompatibilität
da in irgendeiner Form eingebaut,

333
00:17:25,100 --> 00:17:28,020
sondern sie funktionierten immer nur,
wenn die kostenlose und die

334
00:17:28,021 --> 00:17:30,540
kostenpflichtige in exakt derselben
Version installiert waren.

335
00:17:30,955 --> 00:17:33,515
Und in jeder anderen Kombination hat das
Ding immer nur geknallt.

336
00:17:35,190 --> 00:17:38,400
Das muss man wissen, wenn man da so
gemütlich mal durch die Plugin-Updates geht.

337
00:17:39,010 --> 00:17:41,010
Und bei der Pro-Version
wird ja kein Update angezeigt,

338
00:17:41,030 --> 00:17:42,740
weil das ist ja eins, was
man manuell machen muss.

339
00:17:42,741 --> 00:17:45,421
Und dann klickt man da gemütlich durch und
dann ist der Shop kaputt.

340
00:17:47,230 --> 00:17:48,470
Das ist ein bisschen schwierig.

341
00:17:48,750 --> 00:17:51,950
Dumm ist halt, man könnte jetzt auf die
Idee kommen, jetzt machen wir erstmal die

342
00:17:52,070 --> 00:17:55,340
Pro -Version, das Update per FTP,
danach alles andere geht auch nicht,

343
00:17:55,360 --> 00:17:57,080
weil dann ist ja auch erstmal ein 500
-Fall.

344
00:17:57,130 --> 00:17:58,503
Das heißt, man weiß
eigentlich, sobald man das

345
00:17:58,527 --> 00:18:00,540
Update machen will,
das ist immer ein 500-Fall.

346
00:18:01,160 --> 00:18:02,160
Immer.

347
00:18:03,060 --> 00:18:04,961
Das hat sich ein
bisschen beruhigt, weil das

348
00:18:04,962 --> 00:18:07,281
Plugin das mittlerweile
einen Ticken besser macht.

349
00:18:07,640 --> 00:18:09,240
Es gibt mindestens eine Warnmeldung aus.

350
00:18:09,760 --> 00:18:12,160
Es gibt eine Warnmeldung aus und ich mache
jetzt nichts mehr.

351
00:18:12,620 --> 00:18:17,220
Also in den letzten Wochen gab es da eine
Verbesserung, die übrigens genauso ist wie

352
00:18:17,221 --> 00:18:19,700
bei einem Plugin, was ihr vielleicht noch
etwas besser kennt, das ist das Plugin

353
00:18:19,701 --> 00:18:22,340
Germanize, was also genau in derselben
Methodik funktioniert.

354
00:18:22,540 --> 00:18:24,740
Wir haben ein Germanize und wir haben ein
Germanize Pro.

355
00:18:25,240 --> 00:18:27,292
Da passiert exakt
dasselbe, nur mit dem

356
00:18:27,293 --> 00:18:29,921
Unterschied, dass sie es
besser programmiert haben.

357
00:18:31,350 --> 00:18:36,140
Denn wenn die kostenlose Version mit der
kostenpflichtigen Version so weit

358
00:18:36,141 --> 00:18:39,860
auseinander ist, dass sie das irgendwie
komisch finden, dann merken sie das.

359
00:18:40,280 --> 00:18:41,400
Die Seite geht nicht kaputt.

360
00:18:41,770 --> 00:18:44,560
Das Ding ist, sie deaktivieren die Pro
-Version.

361
00:18:45,460 --> 00:18:49,240
Sie schalten sie einfach ab und sagen das
passt nicht zusammen, wir haben die mal

362
00:18:49,241 --> 00:18:50,900
sicherheitshalber abgeschaltet,
damit nichts kaputt geht.

363
00:18:50,920 --> 00:18:51,920
Sorry.

364
00:18:52,910 --> 00:18:55,460
Dumm ist ja nur, wenn da irgendwelche
Funktionen drin sind, die man gerade

365
00:18:55,461 --> 00:18:58,257
braucht, dann hat der
Shop die Funktion gerade

366
00:18:58,258 --> 00:19:00,520
mal nicht mehr, wenn
man das nicht feststellt.

367
00:19:00,650 --> 00:19:06,600
Deswegen auf den Lizenzstatus achten,
passt das alles, weil Germanize Pro würde

368
00:19:06,601 --> 00:19:11,000
ja ein Update anzeigen und das könnte man
auch klicken, wenn denn die Lizenz stimmt.

369
00:19:12,360 --> 00:19:14,920
Und wenn die nicht stimmt, zeigt die auch
einfach kein Update ab.

370
00:19:15,150 --> 00:19:18,920
Das heißt, an der Stelle, vorher genau
alles gucken, ob alles gut ist,

371
00:19:19,380 --> 00:19:21,190
in der Hoffnung, dass
man alle Updates sieht und

372
00:19:21,214 --> 00:19:23,330
nicht plötzlich irgendwelche
komischen Sachen macht.

373
00:19:24,100 --> 00:19:25,480
Übrigens, apropos Lizenz.

374
00:19:26,560 --> 00:19:27,560
Zu unserem Thema.

375
00:19:28,550 --> 00:19:34,201
Wenn man mal guckt, kostenpflichtige
Plugins, die keine Update-Hinweise anzeigen.

376
00:19:34,600 --> 00:19:36,000
Zum Beispiel, weil sie keine haben.

377
00:19:36,150 --> 00:19:40,040
Grundsätzlich eben, weil sie per MTP
aktualisiert werden müssen oder eben,

378
00:19:40,550 --> 00:19:41,550
weil die Lizenz fehlt.

379
00:19:43,700 --> 00:19:46,139
Oder weil irgendwas
anderes irgendwie komisch ist,

380
00:19:46,140 --> 00:19:48,241
weil da gibt es tausend
verschiedene Varianten.

381
00:19:53,070 --> 00:19:55,910
Es gibt ja Marktplätze, wo man die Dinger
unter Umständen kauft.

382
00:19:58,110 --> 00:20:00,926
Meine Empfehlung ist, bei den meisten
Marktplätzen gibt es irgendwie ein Zusatz

383
00:20:00,950 --> 00:20:03,571
-Plugin, mit dem man
die Updates machen kann,

384
00:20:03,572 --> 00:20:06,591
selbst wenn die sonst
nur per FTP funktionieren.

385
00:20:08,100 --> 00:20:12,070
Sowas sollte man haben, damit man auch
darüber dann die Information bekommt,

386
00:20:12,210 --> 00:20:13,410
dass es irgendein Update gibt.

387
00:20:16,290 --> 00:20:18,690
Jetzt kommt eine Folie, da sind zwei
schöne Logos drauf.

388
00:20:23,870 --> 00:20:25,790
Wir waren ja eben schon mal bei
Inkompatibilität.

389
00:20:26,470 --> 00:20:30,680
Und wenn wir über Inkompatibilität reden,
dann fallen mir sofort und spontan zwei

390
00:20:30,681 --> 00:20:33,160
Plugins ein, bei denen das Thema echt
super ist.

391
00:20:33,580 --> 00:20:35,940
Das ist einmal WooCommerce und einmal
Elementor.

392
00:20:37,180 --> 00:20:40,580
Und zwar nicht, weil die beiden Plugins
irgendwie total doof wären, sondern,

393
00:20:42,200 --> 00:20:44,752
weil es meistens irgendwelche
Zusatz -Plugins gibt,

394
00:20:44,753 --> 00:20:47,340
die damit irgendwie in
Verbindung arbeiten müssen.

395
00:20:47,980 --> 00:20:50,381
WooCommerce, noch fünf
WooCommerce Zusatz -Plugins,

396
00:20:50,382 --> 00:20:52,761
bei Elementor noch diverseste
Zusatz -Addons dabei.

397
00:20:55,090 --> 00:20:57,580
Und da ist der Ärger schon
vorprogrammiert, weil da ist auch wieder

398
00:20:57,581 --> 00:21:01,140
die Frage, naja, was aktualisiere ich denn
als erstes?

399
00:21:01,340 --> 00:21:02,780
Und klappt das alles so miteinander?

400
00:21:03,250 --> 00:21:06,280
Und da würde ich immer sagen, diese ganzen
Zusatz-Plugins, die müssen immer als

401
00:21:06,281 --> 00:21:11,220
erstes aktualisiert werden, weil solange
es für die kein Update gibt, würde ich

402
00:21:11,221 --> 00:21:13,707
nicht darauf wetten, dass die
mit der neuesten WooCommerce

403
00:21:13,708 --> 00:21:15,801
oder Elementor -Version
tatsächlich kompatibel sind.

404
00:21:16,610 --> 00:21:18,850
Und dann würde ich mit dem Update noch
eine Runde warten.

405
00:21:19,020 --> 00:21:22,220
Also, erst, ob die Addons gucken,
ob die Zusatz-Plugins, die da irgendwie

406
00:21:22,221 --> 00:21:26,180
von abhängig sind, und wenn die ein Update
rausgebracht haben und offiziell

407
00:21:26,181 --> 00:21:30,500
behaupten, mit der Version von WooCommerce
oder Elementor kompatibel zu sein, dann.

408
00:21:32,460 --> 00:21:33,900
Aber ich erzähle ja gerne Anekdoten.

409
00:21:35,500 --> 00:21:37,300
Ich muss eine Anekdote von Elementor
erzählen.

410
00:21:37,860 --> 00:21:41,320
Das ist wirklich ein wirklich,
eine schöne Story.

411
00:21:42,890 --> 00:21:44,250
Wir haben diverse Websites gehabt.

412
00:21:45,760 --> 00:21:47,880
Unterschiedlichster Natur,
unterschiedlichsten Kunden,

413
00:21:48,180 --> 00:21:50,863
unterschiedlichster
Hoster, also wirklich keine

414
00:21:50,963 --> 00:21:53,600
Gemeinheiten, außer
dass es Elementor war.

415
00:21:54,460 --> 00:21:55,500
Und die ging immer kaputt.

416
00:21:55,950 --> 00:21:56,760
Mit dem Elementor Update.

417
00:21:56,840 --> 00:21:57,000
Immer.

418
00:21:57,680 --> 00:21:59,580
Und zwar ging immer die Navigation kaputt.

419
00:22:01,370 --> 00:22:02,536
Nur die Navigation, nichts anderes.

420
00:22:02,560 --> 00:22:06,940
Die Navigation war aber zerstört,
CSS sah schrottig aus, ging nicht.

421
00:22:09,440 --> 00:22:12,625
Und wenn wir unter Tools
CSS neu generieren von

422
00:22:12,645 --> 00:22:15,200
Elementor geklickt
haben, war alles wieder gut.

423
00:22:16,060 --> 00:22:16,500
Immer.

424
00:22:16,501 --> 00:22:17,820
Aber nicht jede.

425
00:22:18,410 --> 00:22:19,280
Nicht jede Elementor Seite.

426
00:22:19,420 --> 00:22:20,420
Nur ein paar.

427
00:22:22,550 --> 00:22:27,440
Wir fanden irgendwann raus, das liegt
daran, dass Elementor versucht,

428
00:22:27,600 --> 00:22:29,680
eine CSS-Datei zu laden per HTTP.

429
00:22:30,770 --> 00:22:31,770
Und nicht HTTPS.

430
00:22:32,360 --> 00:22:34,996
Und deswegen hat der Browser gesagt,
nee, nee, nee, das geht hier nicht.

431
00:22:35,020 --> 00:22:36,700
Du darfst hier keine HTTP-Datei mehr
laden.

432
00:22:37,570 --> 00:22:40,980
Und die Datei, die er da versucht hat zu
laden, war eine CSS-Datei von Elementor.

433
00:22:42,040 --> 00:22:46,840
Und zwar keine dynamisch generierte,
sondern eine, die im Plugin mitgeliefert

434
00:22:46,841 --> 00:22:50,020
wurde, für die Basis-Styles der
Navigation.

435
00:22:51,960 --> 00:22:52,960
Aber warum?

436
00:22:53,510 --> 00:22:54,510
Was passiert da?

437
00:22:57,120 --> 00:22:59,836
Ihr wisst aber, wenn die per HTTP geladen
wird, wird sie nicht geladen.

438
00:22:59,860 --> 00:23:01,460
Und dann war die Navigation halt kaputt.

439
00:23:01,980 --> 00:23:04,640
Wenn wir neu den Cache clearen,
dann ging's.

440
00:23:05,220 --> 00:23:08,180
Und wir haben uns ungefähr so gefühlt.

441
00:23:09,540 --> 00:23:10,020
Warum?

442
00:23:10,340 --> 00:23:10,960
Was macht der?

443
00:23:10,980 --> 00:23:11,480
Warum HTTP?

444
00:23:11,481 --> 00:23:12,680
Warum immer nach dem Update?

445
00:23:13,165 --> 00:23:15,300
Und warum nicht, wenn wir den Cache
clearen?

446
00:23:16,380 --> 00:23:17,380
Was macht ihr da?

447
00:23:18,050 --> 00:23:21,060
Und dann haben wir lange, lange,
lange gestanden.

448
00:23:21,160 --> 00:23:22,160
Also wirklich lange.

449
00:23:23,400 --> 00:23:29,480
Und die Lösung oder das Einzige,
was wir gefunden haben, ist, die Seiten,

450
00:23:29,481 --> 00:23:31,660
auf denen das auftrat,
die hatten keinen

451
00:23:31,661 --> 00:23:34,721
festen Redirect von HTTP
auf HTTPS eingestellt.

452
00:23:34,830 --> 00:23:38,800
Also entweder über den Hoster oder in der
htaccess-Datei irgendwie definiert.

453
00:23:41,070 --> 00:23:42,156
Und dann haben wir den eingerichtet.

454
00:23:42,180 --> 00:23:43,560
Und dann ging's.

455
00:23:45,200 --> 00:23:46,200
Es ist wohl so.

456
00:23:46,390 --> 00:23:48,816
Weiter haben wir es dann nicht,
weil wir wollten uns Zeit sparen.

457
00:23:48,840 --> 00:23:50,056
Weiter haben wir es nicht untersucht.

458
00:23:50,080 --> 00:23:52,796
Es ist wohl so, dass nach
dem Update Elementor

459
00:23:52,797 --> 00:23:55,921
selber seinen eigenen
Cache neu erzeugt.

460
00:23:56,185 --> 00:23:59,560
Und das aber irgendwie anders macht,
als wenn man draufklickt auf den Button

461
00:23:59,561 --> 00:24:04,300
und dabei aus irgendeinem Grund auf die
Idee kommt, seine eigene CSS-Datei aus dem

462
00:24:04,301 --> 00:24:07,340
eigenen Verzeichnis von Elementor,
die da standardmäßig dabei ist,

463
00:24:07,830 --> 00:24:08,830
per HTTP zu laden.

464
00:24:09,500 --> 00:24:12,900
Wohlgemerkt hat keine der Seiten
irgendwie, Home-URL, Site-URL oder an

465
00:24:12,901 --> 00:24:15,900
irgendeiner Stelle HTTP Doppelpunkt
irgendwas stehen gehabt.

466
00:24:16,020 --> 00:24:17,020
Das war alles sauber.

467
00:24:17,480 --> 00:24:19,400
Keine Ahnung, warum Elementor auf diese
Idee kam.

468
00:24:19,750 --> 00:24:23,420
Hat uns ein paar Wochen, einige Stunden
und viel Kopfkratzen gekostet.

469
00:24:25,460 --> 00:24:28,840
Macht man in der htaccess einen Redirect
rein, nie wieder Probleme mit Elementor.

470
00:24:29,760 --> 00:24:30,640
Ähm, ja.

471
00:24:30,720 --> 00:24:31,720
War interessant.

472
00:24:33,650 --> 00:24:35,246
Ich hab noch ein paar Sachen mehr,
die schiefgehen können.

473
00:24:35,270 --> 00:24:36,270
Ich erzähl noch was.

474
00:24:37,140 --> 00:24:38,140
Ähm...

475
00:24:39,100 --> 00:24:42,280
Habt ihr schon mal Seiten aktualisiert,
die ganz, ganz alt waren?

476
00:24:45,170 --> 00:24:47,000
Spannende Frage ist, wie gut klappt das?

477
00:24:48,330 --> 00:24:50,940
Und es gibt so positiv und negativ
Beispiele.

478
00:24:51,570 --> 00:24:55,380
Wenn ihr mal ein Yoast SEO hattet,
das ist eigentlich vollkommen wurscht.

479
00:24:55,400 --> 00:24:56,400
Das kann in Version 2.

480
00:24:56,440 --> 00:24:59,740
irgendwas vorliegen und jetzt auf Version
28 hoch und ihr klickt das eben.

481
00:25:00,490 --> 00:25:02,560
Da geht seltenst was kaputt.

482
00:25:03,980 --> 00:25:04,980
Gegenbeispiel?

483
00:25:05,260 --> 00:25:06,260
Arbata.

484
00:25:08,800 --> 00:25:09,800
Nicht machen.

485
00:25:10,390 --> 00:25:14,300
Bei Arbata kann ich einen dringenden Rat
geben, nicht einfach von Version irgendwas

486
00:25:14,301 --> 00:25:20,120
auf hoch aktualisieren, sondern schön per
FTP Stück für Stück Major Version für

487
00:25:20,220 --> 00:25:24,880
Major Version nach und nach, weil alles
andere wird die Seite maximal zerstören.

488
00:25:25,610 --> 00:25:29,820
Ein Hintergrund ist auch, dass
Arbata in den letzten Jahren

489
00:25:29,821 --> 00:25:32,601
regelmäßig die Art und Weise
der Lizenzierung geändert hat.

490
00:25:32,680 --> 00:25:36,440
Also welcher Key, welcher Token für was
und wie sie es identifizieren,

491
00:25:36,990 --> 00:25:38,780
dass die Lizenzierung gültig ist und
nicht.

492
00:25:39,900 --> 00:25:42,460
Und wenn man nämlich da nicht aufpasst,
ist man im maximalen Deadlock drin.

493
00:25:42,461 --> 00:25:45,197
Dann klickt man einfach
auf Update und dann sagt

494
00:25:45,198 --> 00:25:47,000
das Ding, ja hab ich
aktualisiert, ist super.

495
00:25:47,060 --> 00:25:49,016
Du musst aber jetzt deine neuen
Lizenzdaten ausfüllen.

496
00:25:49,040 --> 00:25:52,600
Man sagt, äh, neue Lizenzdaten, äh,
neue Lizenz, keine Ahnung, hab ich nicht.

497
00:25:52,965 --> 00:25:53,996
Hat der Kunde mir noch nicht gegeben.

498
00:25:54,020 --> 00:25:54,820
Der Kunde weiß sie auch nicht.

499
00:25:54,860 --> 00:25:59,480
Aber, solange ich die nicht eingebe,
kann ich die zum Theme gehörenden Core

500
00:25:59,481 --> 00:26:03,420
Plugins nicht aktualisieren, weil das kann
ich erst, wenn die Lizenz gültig ist.

501
00:26:04,320 --> 00:26:06,760
Und solange ich die nicht aktualisiere,
ist die Seite aber kaputt, weil die Core

502
00:26:06,761 --> 00:26:09,580
Plugins ja noch alt sind und das Theme
aber schon neu.

503
00:26:11,140 --> 00:26:13,960
Und dann steht man da und ruft den Kunden
an, Entschuldigung, wir brauchen mal ganz

504
00:26:13,961 --> 00:26:17,300
dringend ihre Lizenzdaten, weil sonst geht
hier nix mehr.

505
00:26:17,860 --> 00:26:18,896
Und da sagt der Kunde, ja, aber warum?

506
00:26:18,920 --> 00:26:25,160
Ich sag, ja, also da ist ganz langsam und
stückweise eine gute Idee, weil dann hat

507
00:26:25,161 --> 00:26:27,148
man da wenigstens die
Chance, zum richtigen Zeitpunkt

508
00:26:27,149 --> 00:26:29,160
einzugreifen und es
ist nicht komplett kaputt.

509
00:26:30,960 --> 00:26:33,100
Ähm, aufpassen.

510
00:26:35,040 --> 00:26:37,080
Lizenzstatus vorher prüfen ist immer eine
gute Idee.

511
00:26:38,135 --> 00:26:40,820
Wobei, wie gesagt, bei Avada fällt einem
das vorher gar nicht auf, weil die Lizenz

512
00:26:40,821 --> 00:26:43,860
war ja da mit der alten Identifizierung
war vollkommen in Ordnung.

513
00:26:43,920 --> 00:26:47,301
Erst nach dem Update sagt er, ja, jetzt muss
ich sie aber bitte nochmal neu ertragen.

514
00:26:49,550 --> 00:26:50,550
Schon wieder WooCommerce.

515
00:26:52,070 --> 00:26:52,390
Passt.

516
00:26:52,820 --> 00:26:56,330
Ich weiß nicht, ob ihr das Feature kennt,
die High-Performance-Order-Tables,

517
00:26:56,350 --> 00:27:00,770
die mit Version, was hab ich geschrieben,
seit Version 8.2 in WooCommerce sind.

518
00:27:01,730 --> 00:27:02,930
Ketty, wisst ihr, was das ist?

519
00:27:03,850 --> 00:27:05,750
Das ist wenig eine Nicke, also erzähl ich
was.

520
00:27:07,540 --> 00:27:11,850
Wie das so in WordPress ist, wird ja alles
irgendwie in Posts gespeichert und in...

521
00:27:12,890 --> 00:27:13,890
Alles ist ein Post.

522
00:27:14,030 --> 00:27:15,391
Also jede Bestellung
ist ein Post, jedes

523
00:27:15,392 --> 00:27:17,851
Produkt ist ein Post,
jedes alles ist ein Post.

524
00:27:18,125 --> 00:27:20,715
Was die Post-Tabelle relativ
groß macht, ist ein Ding,

525
00:27:20,716 --> 00:27:23,670
was man ja an WordPress
relativ häufig kritisiert.

526
00:27:24,510 --> 00:27:26,930
Und irgendwann sind die WooCommerce-Macher
auf die Idee gekommen, dass sie das mal

527
00:27:26,931 --> 00:27:30,990
ändern könnten und zumindestens alle
Bestellungen, also alle Order in eigene

528
00:27:30,991 --> 00:27:34,570
Tabellen packen könnten, damit die Post
-Tabelle dafür entlassen wird.

529
00:27:34,670 --> 00:27:36,210
Was übrigens eine grandiose Idee ist.

530
00:27:36,310 --> 00:27:37,470
Also wirklich, ernst gemeint.

531
00:27:38,940 --> 00:27:43,312
Dieses Feature gibt es seit
WooCommerce 8 .2 und wenn man jetzt

532
00:27:43,313 --> 00:27:48,210
WooCommerce frisch neu
installiert, dann sind die auch aktiv.

533
00:27:48,970 --> 00:27:49,970
Das funktioniert.

534
00:27:51,000 --> 00:27:53,766
In allen alten Versionen natürlich nicht,
weil man hat ja nur ein Update gemacht.

535
00:27:53,790 --> 00:27:57,170
Das heißt, was man natürlich auch relativ
häufig hat, es gibt Features, die,

536
00:27:57,250 --> 00:27:59,370
wenn man es neu
und frisch installiert, da

537
00:27:59,371 --> 00:28:01,450
sind, funktionieren und
genutzt werden können.

538
00:28:01,935 --> 00:28:04,945
Wenn man aber immer
nur ein uraltes System

539
00:28:04,946 --> 00:28:07,370
hat und Updates macht,
nie aktiviert werden.

540
00:28:07,430 --> 00:28:08,470
Man muss es per Hand tun.

541
00:28:09,310 --> 00:28:11,710
Hintergrund ist natürlich, dabei findet
eine Migration statt.

542
00:28:12,240 --> 00:28:15,950
Muss man gucken, ob alle anderen
WooCommerce Add-on, Zusatzmodul,

543
00:28:16,100 --> 00:28:18,660
Plugins dazu kompatibel sind, ob sie das
mit unterstützen und so.

544
00:28:18,940 --> 00:28:22,311
Deswegen ist es viel zu riskant, das einfach
zu aktivieren in einem Bestandssystem.

545
00:28:23,670 --> 00:28:25,850
Insofern, volles Verständnis dafür,
dass das so ist.

546
00:28:26,350 --> 00:28:29,610
Aber, wenn man nicht weiß, dass es dieses
Feature gibt, übrigens ChangeLog lesen,

547
00:28:30,090 --> 00:28:34,090
dann wird man dieses tolle Feature niemals
aktiviert kriegen und das ist natürlich

548
00:28:34,540 --> 00:28:36,330
bei tausend anderen Plugins auch so.

549
00:28:40,580 --> 00:28:41,060
So.

550
00:28:41,560 --> 00:28:43,160
Jetzt habe ich noch ein absolutes No-Go.

551
00:28:45,660 --> 00:28:46,660
Lustige Rate-Runde.

552
00:28:47,640 --> 00:28:49,960
Hat jemand eine Idee, was das absolute No
-Go ist?

553
00:28:54,910 --> 00:28:55,910
Nicht?

554
00:28:57,610 --> 00:28:59,770
Gucken wir mal, ob ihr euch jetzt daran
erinnern könnt.

555
00:29:03,520 --> 00:29:11,520
Niemals, aber auch niemals, ändern wir
Code direkt in einem Plugin, welches nicht

556
00:29:11,521 --> 00:29:15,000
ein Individual-Plugin ist, sondern
irgendwas von irgendwem offizielles.

557
00:29:16,280 --> 00:29:16,600
Niemals.

558
00:29:16,601 --> 00:29:21,681
Weil in dem Augenblick, wo wir das tun,
können wir dieses Plugin nicht mehr updaten.

559
00:29:22,090 --> 00:29:23,576
Weil wenn wir es updaten, ist unser Code
weg.

560
00:29:23,600 --> 00:29:24,676
Dann müssen wir wieder nacheinbauen.

561
00:29:24,700 --> 00:29:25,860
Das wollen wir ja auch nicht.

562
00:29:26,720 --> 00:29:29,985
Also niemals tun, weil es
gibt entweder Ärger beim

563
00:29:29,986 --> 00:29:32,340
updaten oder es gibt
Ärger beim nicht updaten.

564
00:29:32,440 --> 00:29:34,276
Also eins von beiden gibt auf jeden Fall
Ärger.

565
00:29:34,300 --> 00:29:35,300
Machen wir nicht.

566
00:29:37,700 --> 00:29:41,541
Wir sind ja aus öffentlichen Quellen, das
heißt es wird regelmäßig Updates geben.

567
00:29:42,440 --> 00:29:42,880
Hoffentlich.

568
00:29:43,230 --> 00:29:46,300
Und die wollen wir ja auch regelmäßig
einspielen, damit die Kompatibilität

569
00:29:46,500 --> 00:29:51,680
erhalten bleibt zu anderen Plugins, zum
Core, zu PHP, zur Gesetzeslage, zu irgendwas.

570
00:29:55,020 --> 00:29:57,570
Aber wenn wir da was anpassen,
haben wir die Chance nicht.

571
00:29:58,900 --> 00:30:02,550
Und machen wir keine Updates, haben wir
ein Sicherheitsrisiko.

572
00:30:03,180 --> 00:30:05,970
Und zwar sehr schnell ein sehr großes,
abgesehen davon, dass möglicherweise

573
00:30:05,971 --> 00:30:08,610
Sachen da nicht funktionieren,
weil wenn wir alle anderen Plugins drum

574
00:30:08,611 --> 00:30:11,910
herum aktualisieren, beißen die sich
möglicherweise auch wieder.

575
00:30:12,960 --> 00:30:17,710
Und im Idealfall gute Plugins haben
irgendwelche Hooks und Filter.

576
00:30:17,910 --> 00:30:19,510
Gab es heute auch einen Vortrag zu.

577
00:30:20,540 --> 00:30:24,890
Mit dem man die Änderungen, die man da
gerne einbauen wollen würde, tatsächlich

578
00:30:24,891 --> 00:30:28,290
einbauen kann, ohne das Plugin selber zu
verändern, sondern damit, dass man es

579
00:30:28,340 --> 00:30:31,010
irgendwie Schaltbeam oder einem Individual
-Plugin parallel macht.

580
00:30:33,440 --> 00:30:36,530
Das löst einem nicht das Problem,
dass wenn sich das Plugin dramatisch

581
00:30:36,531 --> 00:30:38,644
ändert, dass man seine
eigenen Anpassungen, die

582
00:30:38,645 --> 00:30:40,850
man nebenher gemacht
hat, auch mit anpassen muss.

583
00:30:41,810 --> 00:30:45,710
Schaltbeams müssen auch regelmäßig
aktualisiert werden, weil wenn sich die

584
00:30:45,711 --> 00:30:49,570
Original -Templates im Original-Team ändern,
dann muss man häufig Anpassungen machen.

585
00:30:49,630 --> 00:30:50,830
Übrigens bei WooCommerce auch.

586
00:30:50,910 --> 00:30:54,210
Wenn WooCommerce die Standard-Templates
ändert und die Standard-Templates sind im

587
00:30:54,211 --> 00:30:56,445
Steam überschrieben und
dann im Schalt -Team nochmal

588
00:30:56,446 --> 00:30:58,871
überschrieben, dann muss man
da meistens auch irgendwas tun.

589
00:31:00,040 --> 00:31:02,840
Aber das ist immer noch besser,
weil man ist koordinierter und kann das

590
00:31:03,010 --> 00:31:07,770
auch testen in einem Test-Team, als
wenn man wirklich den Code selber ändert.

591
00:31:08,045 --> 00:31:09,870
Also böse, böse niemals machen.

592
00:31:13,190 --> 00:31:19,530
Ja, ich bin seit knapp zehn Jahren in der
WordPress-Community unterwegs und ja,

593
00:31:19,980 --> 00:31:21,820
WordPress ist ja auch schon ein bisschen
älter.

594
00:31:22,430 --> 00:31:28,210
Und in so einem Leben passiert einiges und
manchmal nennen sich Plugins auch um.

595
00:31:28,650 --> 00:31:30,450
Das ist mein Lieblingsbeispiel.

596
00:31:30,900 --> 00:31:33,327
Als ich in der Community
angefangen habe, da

597
00:31:33,328 --> 00:31:36,571
gab es ein Plugin, das
hieß Beta WP Security.

598
00:31:37,370 --> 00:31:39,610
Dann wurde es ganz schnell umbenannt in
iThemes Security.

599
00:31:40,730 --> 00:31:44,030
Und vor nicht allzu so langer Zeit wurde
es umbenannt in Solid WP Security.

600
00:31:45,770 --> 00:31:46,770
Und das ist okay.

601
00:31:46,830 --> 00:31:48,510
Das ist halt immer wieder ein neues
Plugin.

602
00:31:48,930 --> 00:31:50,486
Aber man muss es wissen, dass es so ist.

603
00:31:50,510 --> 00:31:54,190
Dass das irgendwie immer noch dasselbe ist
und heißt aber anders, sieht ein bisschen

604
00:31:54,191 --> 00:31:56,071
anders aus, tut aber irgendwie noch das
Gleiche.

605
00:31:56,650 --> 00:31:58,410
Das heißt, manchmal hat man da so ein
Update.

606
00:31:58,710 --> 00:32:00,350
Da steht dann also noch iThemes Security.

607
00:32:00,510 --> 00:32:01,957
Boah, ist ein bisschen
länger, nachher Klick und

608
00:32:01,981 --> 00:32:03,430
dann sucht man nachher,
wo ist denn mein Plugin?

609
00:32:03,550 --> 00:32:04,550
Ist ja gar nicht mehr da.

610
00:32:05,060 --> 00:32:07,260
Aber plötzlich ein neues Plugin heißt
Solid WP Security.

611
00:32:09,370 --> 00:32:10,370
Sollte man wissen.

612
00:32:12,070 --> 00:32:13,070
Kurze Lernfrage.

613
00:32:13,110 --> 00:32:14,510
Woher weiß man, dass das so ist?

614
00:32:16,130 --> 00:32:16,850
Changelog lesen.

615
00:32:16,851 --> 00:32:17,851
Ja, ja, genau.

616
00:32:18,110 --> 00:32:19,550
Da steht das idealerweise.

617
00:32:20,250 --> 00:32:23,670
Beziehungsweise, wenn man auf Details
anzeigen klickt des jeweiligen Plugins,

618
00:32:23,750 --> 00:32:25,690
dann öffnet sich ja die Seite aus dem
Repository.

619
00:32:25,790 --> 00:32:27,537
Und wenn da schon der
neue Name steht, dann kann

620
00:32:27,538 --> 00:32:29,070
man das vielleicht da
irgendwie auch erkennen.

621
00:32:29,190 --> 00:32:31,155
Aber es gibt auch noch
so ein paar andere, die

622
00:32:31,156 --> 00:32:33,851
sich auch schon mal
umbenannt haben oder Dinge tun.

623
00:32:34,330 --> 00:32:36,410
Ihr kennt vielleicht das Plugin Really
Simple SSL.

624
00:32:36,470 --> 00:32:37,550
Kleiner Tipp, nicht nutzen.

625
00:32:38,970 --> 00:32:39,970
Braucht man nicht.

626
00:32:40,670 --> 00:32:43,910
Und es hat da eigentlich eine Funktion,
nämlich irgendwie SSL Features nachrüsten

627
00:32:43,911 --> 00:32:47,130
und da irgendwie was machen, damit die
Seite gut mit HTTPS funktioniert.

628
00:32:47,580 --> 00:32:50,790
Und als sie merken, dass alle Seiten
irgendwie mittlerweile HTTPS haben und

629
00:32:50,791 --> 00:32:53,591
eigentlich kein Mensch mehr dieses Plugin
braucht, sind sie auf die Idee gekommen,

630
00:32:53,615 --> 00:32:55,046
jetzt machen wir mal ein Sicherheits
-Plugin draus.

631
00:32:55,070 --> 00:32:56,821
Das können die Leute ja immer noch
gebrauchen.

632
00:32:56,845 --> 00:32:59,750
Deswegen, wenn man jetzt heute Really
Simple SSL installiert ist, hat das mehr

633
00:32:59,751 --> 00:33:02,890
Funktionen, die irgendwas mit Security zu
tun haben, als mit SSL.

634
00:33:04,490 --> 00:33:06,930
Muss man auch wissen und dann
möglicherweise sich nach einem Update

635
00:33:06,931 --> 00:33:09,212
entscheiden, dass man es vielleicht nicht
mehr haben will.

636
00:33:09,610 --> 00:33:13,190
Weil es mehr macht als das, was man
eigentlich braucht und mehr macht als das,

637
00:33:13,230 --> 00:33:15,210
was man eigentlich machen... erledigen
wollte.

638
00:33:15,810 --> 00:33:16,970
Und dann schmeißt man es weg.

639
00:33:17,740 --> 00:33:21,070
Das gilt übrigens auch für das so schöne
Plugin namens WP User Avatar.

640
00:33:22,410 --> 00:33:26,370
Welches eigentlich mal so aus DSGVO
-Thematik dafür da war, dass die User

641
00:33:26,371 --> 00:33:29,790
Avatare die da so immer angezeigt werden,
auch so in Kommentaren und so,

642
00:33:30,340 --> 00:33:34,310
nicht von Gravatar geladen werden,
sondern pflegbar waren im Backend.

643
00:33:35,390 --> 00:33:37,370
Relativ einfache Funktion, relativ
offensichtlich.

644
00:33:38,530 --> 00:33:40,472
Das Plugin heißt jetzt,
Moment, ich muss es

645
00:33:40,473 --> 00:33:42,790
ablesen, ProfilePress
Paid Membership Plugin.

646
00:33:44,090 --> 00:33:48,490
Und Paid Membership pflegt so wenig nach
User Avatar.

647
00:33:49,630 --> 00:33:53,210
Also ja, natürlich hat so ein Login-Mensch
vielleicht auch irgendwie ein User Avatar,

648
00:33:53,510 --> 00:33:55,010
der da irgendwie ein Membership hat.

649
00:33:55,570 --> 00:33:57,530
Aber eigentlich hat das miteinander nichts
zu tun.

650
00:33:57,580 --> 00:33:58,430
Und genau so ist es.

651
00:33:58,490 --> 00:34:00,970
Also das Plugin hat den Besitzer
gewechselt und nachdem es den Besitzer

652
00:34:00,971 --> 00:34:03,741
gewechselt hat, hat der neue
Besitzer da 90% irgendwie

653
00:34:03,742 --> 00:34:05,910
neuen Code reingeknallt
und neue Funktionalität.

654
00:34:06,030 --> 00:34:08,430
Und jetzt ist es halt eigentlich was ganz
anderes.

655
00:34:08,710 --> 00:34:11,160
Macht vielleicht irgendwo
unten im Detail noch

656
00:34:11,161 --> 00:34:13,410
das, was es vorher
mal angeblich tun sollte.

657
00:34:13,930 --> 00:34:14,930
Aber...

658
00:34:15,470 --> 00:34:18,710
also wer durch seine Plugin-Liste geht und
plötzlich ein Paid Membership Plugin in

659
00:34:18,711 --> 00:34:21,490
seiner Liste findet, obwohl er niemals
Paid Memberships angeboten hat,

660
00:34:22,610 --> 00:34:25,251
kommt auf die Idee, dass er dieses Plugin
eigentlich nicht braucht.

661
00:34:26,810 --> 00:34:28,971
Diese Inhaberwechsel sind aber nicht immer
transparent.

662
00:34:29,400 --> 00:34:31,350
Also wenn ich eben gesagt habe,
ihr müsst das Changelog lesen,

663
00:34:31,351 --> 00:34:33,630
damit ihr sowas mitbekommt, es klappt
nicht immer.

664
00:34:34,070 --> 00:34:37,130
Also in manchen Changelogs steht das
einfach nicht drin.

665
00:34:37,810 --> 00:34:42,290
Und dann seht ihr irgendwann unten,
dass sich die Anzahl der Contributor zu

666
00:34:42,291 --> 00:34:44,412
einem Plugin geändert hat und da steht ja
anders drin.

667
00:34:45,140 --> 00:34:45,830
Das weiß man nicht immer.

668
00:34:45,990 --> 00:34:50,530
Und es gibt halt Fälle, in denen das auch
bewusst so ist, dass das nicht transparent

669
00:34:50,531 --> 00:34:57,130
ist, weil diejenigen, die da was mit zu
tun haben, halbwegs böse Absichten haben.

670
00:34:57,330 --> 00:35:00,610
Also wir haben schon genügend Plugins
gehabt, in denen irgendwelche Bitcoin

671
00:35:00,611 --> 00:35:03,470
-Miner drin waren, irgendwelcher Scam,
irgendwelche Werbung, irgendwas wurde

672
00:35:03,471 --> 00:35:05,890
eingebaut, irgendwas wurde eingepflanzt,
passiert immer.

673
00:35:06,490 --> 00:35:09,770
Diesen Sommer, so ein bisschen ähnlich,
gab es einen Security Breach.

674
00:35:10,780 --> 00:35:14,810
Da sind mehrere Plugins übernommen worden,
allerdings übernommen worden in dem Sinne,

675
00:35:15,390 --> 00:35:22,390
dass jemand den WordPress-Org-Login des
Plugin-Autors erraten hat, inklusive

676
00:35:22,391 --> 00:35:27,610
Passwort, aus irgendeinem Security Breach
das Passwort hatte und genutzt hat und so

677
00:35:27,611 --> 00:35:31,290
sich der Plugins bemächtigen konnte und
darüber dann Schadcode verteilen konnte.

678
00:35:32,330 --> 00:35:35,070
Das ist so etwas, da ist man schlecht
drauf vorbereitet, weil wenn da einfach

679
00:35:35,071 --> 00:35:38,910
nur ein Update angezeigt wird,
weiß gar nicht, ob da was Sinnvolles im

680
00:35:38,911 --> 00:35:42,430
Change -Log stand, keine Ahnung,
wahrscheinlich nicht, dann kommt da

681
00:35:42,431 --> 00:35:46,890
plötzlich irgendwas komisches rein und
dann weiß man nicht, dass da was passiert.

682
00:35:48,870 --> 00:35:51,911
Übrigens steht da gar nicht auf der Folie,
aber weil ich da gerade dabei bin,

683
00:35:53,230 --> 00:35:55,406
es hilft hin und wieder auch
zu prüfen, ob die verwendeten

684
00:35:55,407 --> 00:35:57,530
Plugins überhaupt noch
im Repository drin sind.

685
00:35:58,610 --> 00:36:03,050
Wenn das Plugin seit Ewigkeiten irgendwie
kein Update angezeigt hat, könnte man ja

686
00:36:03,051 --> 00:36:04,896
mal nachgucken, gibt es da überhaupt
Updates für?

687
00:36:04,920 --> 00:36:05,610
Gibt es das Plugin noch?

688
00:36:05,690 --> 00:36:07,070
Ist das überhaupt irgendwie von Nutzen?

689
00:36:07,071 --> 00:36:08,111
Brauchen wir da irgendwas?

690
00:36:10,310 --> 00:36:11,390
Müssen wir es mal ersetzen?

691
00:36:11,900 --> 00:36:12,730
Gibt es den Autor nicht mehr?

692
00:36:12,810 --> 00:36:13,330
Was auch immer.

693
00:36:13,730 --> 00:36:16,586
Also auch das kann man jederzeit tun,
hat nichts mit dem Update selber zu tun,

694
00:36:16,610 --> 00:36:18,970
sondern eher mit dem Problem, dass es kein
Update mehr gibt.

695
00:36:19,160 --> 00:36:21,810
Aber schadet an der Stelle auch nicht.

696
00:36:23,640 --> 00:36:27,950
Weil die Zeit so langsam dahin rennt,
gibt es jetzt schon die Zusammenpassung.

697
00:36:28,830 --> 00:36:30,030
Das passt also halbwegs gut.

698
00:36:31,110 --> 00:36:33,752
Und ich bin mir sicher, auch
wenn ich jetzt viel erzählt habe,

699
00:36:33,753 --> 00:36:36,110
eigentlich ist es gar nicht
so kompliziert, wie es klingt.

700
00:36:36,350 --> 00:36:38,962
Es gibt tausende von
verschiedenen Fällen von komischen

701
00:36:38,963 --> 00:36:41,910
Dingen, die an komischen
Stellen irgendwie passieren können.

702
00:36:43,640 --> 00:36:47,439
Aber in den allermeisten
Fällen gebe ich ganz offen und

703
00:36:47,440 --> 00:36:51,170
ehrlich zu, allermeisten
Updates laufen einfach so durch.

704
00:36:52,290 --> 00:36:54,451
Man muss gar nicht so viel Angst vor den
Updates haben.

705
00:36:54,660 --> 00:36:56,550
Die meisten sind sehr unproblematisch.

706
00:36:57,930 --> 00:37:02,530
Das dumme ist nur, die wenigen,
wo es wirklich gnadenlos schief geht,

707
00:37:03,580 --> 00:37:05,770
die kündigen sich selten vorher vernünftig
an.

708
00:37:06,650 --> 00:37:08,528
Es ist meistens so,
dass die plötzlich da sind

709
00:37:08,529 --> 00:37:10,991
und man plötzlich eine
kaputte Webseite hat.

710
00:37:11,230 --> 00:37:14,850
Deswegen ist das immer so eine Sache,
ob man sich bei diesen Plugins einfach

711
00:37:14,851 --> 00:37:17,290
immer oder bei allen Updates einfach mal
so durchtraut.

712
00:37:17,390 --> 00:37:19,021
Und wir erinnern uns,
dass das Bild mit der

713
00:37:19,022 --> 00:37:21,791
Achterbahn einfach mal
irgendwie alles aktualisiert.

714
00:37:22,600 --> 00:37:24,350
Kann gut gehen, muss nicht, weiß man
nicht.

715
00:37:25,590 --> 00:37:28,690
Natürlich, je weniger Plugins ihr habt,
umso weniger Probleme habt ihr auch in der

716
00:37:28,691 --> 00:37:31,350
Kompatibilität zwischen zwei oder mehr
verschiedenen Plugins.

717
00:37:31,830 --> 00:37:32,270
Logisch.

718
00:37:32,655 --> 00:37:35,290
Und das System der Reihenfolge ist nicht
konsistent.

719
00:37:36,600 --> 00:37:38,930
Auch da gibt es meistens irgendwas,
was funktioniert.

720
00:37:40,160 --> 00:37:41,361
Aber immer muss es nicht sein.

721
00:37:41,470 --> 00:37:44,276
Ihr müsst immer darauf gepasst sein,
dass es auch mal wieder schief geht.

722
00:37:44,300 --> 00:37:48,230
Und es gibt den Dreiklang der besten
Sachen, die man tun kann für gute Updates.

723
00:37:49,090 --> 00:37:50,506
Backups machen, das hatten wir schon.

724
00:37:50,530 --> 00:37:51,350
Testsystem hatten wir auch.

725
00:37:51,470 --> 00:37:53,150
Changelog habe ich jetzt mehrfach erwähnt.

726
00:37:53,230 --> 00:37:55,370
Wenn man die drei
Themen irgendwie beachtet,

727
00:37:55,371 --> 00:37:58,350
dann funktioniert das
fast immer ganz gut.

728
00:37:59,830 --> 00:38:01,410
Jetzt noch letzte Folie.

729
00:38:02,870 --> 00:38:05,431
Ihr fragt euch, wie kommt der Typ auf
diese eine Million Updates.

730
00:38:05,930 --> 00:38:07,710
Also ich meine, das ist ja eine heftige
Zahl.

731
00:38:08,630 --> 00:38:09,270
Aber die stimmt.

732
00:38:09,430 --> 00:38:10,430
Die stimmt wirklich.

733
00:38:12,530 --> 00:38:15,091
Ihr habt mich jetzt gesehen, ihr habt
meinen Namen schon gelesen.

734
00:38:15,170 --> 00:38:18,950
Ich bin Geschäftsführer der WebVisa und
die WebVisa betreiben WP-Wartung24.

735
00:38:19,190 --> 00:38:22,570
Wir machen nichts anderes als so WordPress
-Wartung und sowas.

736
00:38:23,050 --> 00:38:27,591
Wir haben etwas über 800 Seiten in der
Betreuung, die wir regelmäßig aktualisieren.

737
00:38:28,240 --> 00:38:32,468
Und wenn man das zusammenzählt,
kommen wir im Moment so auf

738
00:38:32,469 --> 00:38:35,610
2000 bis 3000 Updates, die
wir so pro Woche durchziehen.

739
00:38:37,280 --> 00:38:40,466
Und wenn man das jetzt mal hochrechnet,
ich selber bin seit 10 Jahren im Geschäft.

740
00:38:40,490 --> 00:38:43,550
Wenn man dann noch die dazuzählt,
wo die gar nicht bei uns in der Wartung

741
00:38:43,551 --> 00:38:46,970
sind, sondern wo wir mal nur mal alle
Updates gemacht haben, irgendwie was

742
00:38:46,971 --> 00:38:50,850
repariert haben, deswegen ein paar Sachen
gemacht haben, dann kommen wir plötzlich

743
00:38:50,851 --> 00:38:55,630
auf so eine Zahl, die ungefähr eine
Million Updates beinhaltet.

744
00:38:57,110 --> 00:38:59,810
Das ist eine erschreckende Menge.

745
00:39:00,200 --> 00:39:02,326
Aber dafür habe ich nur... wie viele
Beispiele habe ich gehabt?

746
00:39:02,350 --> 00:39:02,550
10?

747
00:39:02,950 --> 00:39:03,950
12?

748
00:39:04,020 --> 00:39:06,550
Also erhältst du es zu einer Million,
ist das okay?

749
00:39:07,290 --> 00:39:08,290
Gut.

750
00:39:08,650 --> 00:39:09,650
Das war's.

751
00:39:10,355 --> 00:39:12,410
Ich bin 100% in time, habe ich Glück
gehabt.

752
00:39:12,935 --> 00:39:14,390
Hatte ein bisschen Sorge, aber das hat
geklappt.

753
00:39:14,410 --> 00:39:17,436
Vielen Dank und ihr habt
natürlich die Möglichkeit,

754
00:39:17,437 --> 00:39:19,831
da jetzt irgendwelche
lustigen Fragen noch zu stellen.

755
00:39:20,110 --> 00:39:22,070
Und es gibt einen Link für die Folien.

756
00:39:22,520 --> 00:39:23,726
Ich hoffe, der funktioniert auch.

757
00:39:23,750 --> 00:39:24,970
Aber die sollten da sein.

758
00:39:25,940 --> 00:39:27,950
Und wenn ihr Fragen habt, immer her damit.

759
00:39:47,720 --> 00:39:48,720
Genau.

760
00:39:48,780 --> 00:39:49,780
Super zu der Frage.

761
00:39:49,880 --> 00:39:50,880
Mega spannend.

762
00:39:51,580 --> 00:39:52,580
Also

763
00:40:21,490 --> 00:40:26,040
es ging um Visual Regression Testing, also
um den visuellen Test nach einem Update.

764
00:40:26,041 --> 00:40:30,220
In der Erkennung hat sich da was auf der
Seite geändert, ist was kaputt gegangen

765
00:40:30,221 --> 00:40:36,200
und die Frage, welche Tools es da gibt und
nach einem Test sind die auch unter

766
00:40:36,201 --> 00:40:40,740
Umständen, haben die mal false positives
geliefert, weil sie irgendwelche Pixel

767
00:40:40,741 --> 00:40:42,900
-Alarme gegeben haben, dass sich was
geändert hat, aber eigentlich war es nur

768
00:40:42,901 --> 00:40:45,981
dynamischer Content, der sich geändert hat
und nicht ein Fehler auf der Seite.

769
00:40:48,070 --> 00:40:50,020
Das ist eine Frage für einen kompletten
Vortrag.

770
00:40:51,660 --> 00:40:56,460
Also es gibt diverse Tools, auch im
Wordpress Umfeld mit Wordpress Plugins,

771
00:40:57,165 --> 00:40:59,100
die man installieren kann und dann testen
kann.

772
00:41:01,030 --> 00:41:05,040
Aber dein false positive Problem lässt
sich damit nur eingeschränkt lösen.

773
00:41:05,670 --> 00:41:09,639
Weil wenn man sehr viel
dynamischen Content auf der

774
00:41:09,640 --> 00:41:12,460
Seite hat, dann ist das halt
eine Änderung auf der Seite.

775
00:41:12,840 --> 00:41:15,463
Und das Ding weiß natürlich
nicht, ob es jetzt anständige

776
00:41:15,464 --> 00:41:18,460
Änderungen sind oder ob
es kaputte Änderungen sind.

777
00:41:19,240 --> 00:41:25,120
Was man meistens kann, ist mit Individual
-CSS für diesen Test bestimmte Bereiche

778
00:41:25,121 --> 00:41:29,961
ausblenden oder sonst irgendwas damit
machen, damit man da solche Sachen vermeidet.

779
00:41:30,160 --> 00:41:32,516
Das Problem daran ist, dann wird da auch
nicht mehr getestet.

780
00:41:32,540 --> 00:41:35,500
Also wenn du den Bereich ausblendest und
da ist was kaputt drin gewesen,

781
00:41:35,880 --> 00:41:38,480
also wirklich kaputt, findet der Tester es
natürlich dann auch.

782
00:41:39,905 --> 00:41:44,860
Abgesehen vom Screenshotting, kannst du
natürlich auch so mit sowas wie Playwright

783
00:41:44,861 --> 00:41:50,360
oder Cypress wirklich Frontend-Tests
programmieren, die nicht zwei Screenshots

784
00:41:50,361 --> 00:41:54,080
vergleichen, sondern tatsächlich die Seite
durchtesten im Frontend.

785
00:41:54,660 --> 00:41:57,695
Da kannst du ja auch Abfragen
machen, ob bestimmtes CSS mit

786
00:41:57,696 --> 00:42:00,221
bestimmten Werten an bestimmten
Stellen zur Verfügung steht.

787
00:42:01,320 --> 00:42:06,481
Und damit kannst du es vielleicht zuverlässiger
hinkriegen als mit einem Screenshot.

788
00:42:06,700 --> 00:42:11,300
Wobei aus meiner Sicht grundsätzlich
beides sehr gangbare Wege sind,

789
00:42:11,510 --> 00:42:15,580
wahrscheinlich beides zusammen,
das eine und das andere, um zumindest bei

790
00:42:15,581 --> 00:42:19,300
einer großen Menge an Websites,
wenn man sie irgendwie in der Betreuung

791
00:42:19,301 --> 00:42:21,541
hat, da nicht jede Seite per Hand
durchklicken zu müssen.

792
00:42:21,605 --> 00:42:23,840
Weil das ist natürlich irgendwann nicht
mehr möglich.

793
00:42:24,200 --> 00:42:25,200
Ja.

794
00:42:26,220 --> 00:42:27,220
Ja.

795
00:42:33,700 --> 00:42:36,140
Alle Fragen sonst nebenan zu mir.

796
00:42:36,400 --> 00:42:36,800
Genau.

797
00:42:37,020 --> 00:42:38,020
Ich bin noch da.

798
00:42:38,860 --> 00:42:39,260
Gut.

799
00:42:39,261 --> 00:42:40,261
Dankeschön.

800
00:42:48,490 --> 00:42:49,490
Mhm.

801
00:42:49,770 --> 00:42:50,770
Vielen Dank.

802
00:42:54,140 --> 00:42:55,140
Danke, danke.

